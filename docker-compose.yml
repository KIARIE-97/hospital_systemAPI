
services:
  hospital_management-db:
    image: postgres:15-alpine
    container_name: hospital_management-db
    restart: unless-stopped
    environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: "3797sarah"
       POSTGRES_DB: hospital_management_db
       POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0-alpine
    container_name: hospital_management-redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-3797sara}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-3797sara}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-3797sara}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3


  apihospital-management-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myhospital-app
    ports:
      - "3000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - PG_HOST=192.168.32.83
      - PG_PORT=5433
      - PG_USERNAME=postgres
      - PG_PASSWORD=3797sarah           
      - PG_DATABASE=hospital_management_db
      - DB_SYNC=true
      - DB_AUTOLOAD=true
      - REDIS_URL=redis://:${REDIS_PASSWORD:-3797sara}@hospital_management-redis:6379
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET:-secret}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION_TIME:-15m}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET:-secret}
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION_TIME:-7d}
      - THROTTLE_TTL=${THROTTLE_TTL:-6000}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT:-100}
    depends_on:   
       redis:
        condition: service_healthy
       hospital_management-db:
        condition: service_healthy   
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules 
volumes:
  redis-data:
    name: hospital-management-redis-data
    driver: local
  pgdata:
    name: hospital-management-pgdata
    driver: local  

networks: 
    app-network:
      driver: bridge    
