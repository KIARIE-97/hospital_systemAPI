
services:

  redis:
    image: redis:8.0-alpine
    container_name: myredis-cache
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-3797sara}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-3797sara}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-3797sara}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3


  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mynestjs-app
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DATABASE_URL='postgresql://hospitaldb_owner:npg_W1K0kvpwdMht@ep-soft-water-a8ilsnas-pooler.eastus2.azure.neon.tech/hospitaldb?sslmode=require'
      - REDIS_URL= REDIS_URL=redis://:${REDIS_PASSWORD:-3797sara}@redis:6379
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET:-secret}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION_TIME:-15m}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET:-secret}
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION_TIME:-7d}
      - THROTTLE_TTL=${THROTTLE_TTL:-6000}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT:-100}
    depends_on:   
       redis:
        condition: service_healthy  
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules 
volumes:
  redis-data:
    name: hospital-management-redis-data
    driver: local

networks: 
    app-network:
      driver: bridge    
